{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/tasks.json","webpack:///./src/components/Title.tsx","webpack:///./src/components/TaskForm.tsx","webpack:///./src/components/EmptyTask.tsx","webpack:///./src/components/Task.tsx","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Title_Title","_ref","done","total","react","className","TaskForm_TaskForm","isEditing","_onChange","onChange","onSubmit","type","event","target","onClick","disabled","EmptyTask_EmptyTask","Task_Task","isFav","isDone","text","onEdit","onToggleFav","onToggleDone","onRemove","href","index_es","icon","free_solid_svg_icons_index_es","free_regular_svg_icons_index_es","src_Task","io_ts_es6","id","withFallback","src_task","ordTaskText","Ord","task","ordTaskIsDone","ordTask","lib_Ord","concat","groupTasksBy","Record","Semigroup","lib_Array","src_nextTaskId","tasks","values","map","currentLens","es6","fromProp","currentTextLens","composeLens","tasksLens","src_taskByIdOptional","At_Record","at","String","composePrism","some","Action","unionize_lib","Add","Edit","Load","ToggleDone","ToggleFav","Remove","UpdateText","load","lib","send","response","init","current","app","program","action","model","match","pipeable","none","set","_ref2","Either","body","_ref3","modify","_objectSpread","_ref4","_ref5","_ref6","default","es6_Array","filter","Option","dispatch","assign","run","dom","react_dom","document","getElementById"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAIA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,EAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,GAEA,IAAAC,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,KAAA,SAEAU,0BCvJAY,EAAAD,QAAiBJ,EAAA8B,EAAuB,uPCO3BK,EAAwC,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,MAAT,OACnDC,EAAA,cAAAA,EAAA,6BAEEA,EAAA,sBAAMC,UAAU,oBACbH,QAASC,KCFHG,EAA2C,SAAAL,GAAA,IAAGM,EAAHN,EAAGM,UAAWvB,EAAdiB,EAAcjB,MAAOwB,EAArBP,EAAqBQ,SAAUC,EAA/BT,EAA+BS,SAA/B,OACtDN,EAAA,qBAAKC,UAAU,eACbD,EAAA,uBAAOO,KAAK,OAAON,UAAU,eAAe9B,KAAK,OAAOS,MAAOA,EAAOyB,SAAU,SAAAG,GAAK,OAAIJ,EAASI,EAAMC,OAAO7B,UAC/GoB,EAAA,qBAAKC,UAAU,sBACbD,EAAA,wBAAQO,KAAK,SAASN,UAAU,kBAAkBS,QAASJ,EAAUK,SAAoB,KAAV/B,GAC5EuB,EAAY,OAAS,UCZjBS,EAAqC,kBAChDZ,EAAA,oBAAIC,UAAU,mBACZD,EAAA,yECYSa,EAAuC,SAAAhB,GAAA,IAAGiB,EAAHjB,EAAGiB,MAAOC,EAAVlB,EAAUkB,OAAQC,EAAlBnB,EAAkBmB,KAAMC,EAAxBpB,EAAwBoB,OAAQC,EAAhCrB,EAAgCqB,YAAaC,EAA7CtB,EAA6CsB,aAAcC,EAA3DvB,EAA2DuB,SAA3D,OAClDpB,EAAA,oBAAIC,UAAU,oFACZD,EAAA,yBACEA,EAAA,mBAAGqB,KAAK,IAAIpB,UAAU,WAAWS,QAASQ,GACxClB,EAAA,cAACsB,EAAA,EAAe,CAACC,KAAMT,EAAQU,EAAA,EAASC,EAAA,KAE1CzB,EAAA,mBAAGqB,KAAK,IAAIpB,UAAU,WAAWS,QAASS,GACxCnB,EAAA,cAACsB,EAAA,EAAe,CAACC,KAAMR,EAASS,EAAA,EAAgBC,EAAA,KAEhDV,EAAgBf,EAAA,qBAAKC,UAAU,cAAce,GAApCA,GAEbhB,EAAA,yBACEA,EAAA,mBAAGqB,KAAK,IAAIpB,UAAU,YAAYS,QAASO,GACzCjB,EAAA,cAACsB,EAAA,EAAe,CAACC,KAAMC,EAAA,KAEzBxB,EAAA,mBAAGqB,KAAK,IAAIpB,UAAU,YAAYS,QAASU,GACzCpB,EAAA,cAACsB,EAAA,EAAe,CAACC,KAAMC,EAAA,mjBCV/B,IAAME,EAAOC,EAAA,UACX,CACEC,GAAID,EAAA,OACJX,KAAMW,EAAA,OACNZ,OAAQY,EAAA,QACRb,MAAOrE,OAAAoF,EAAA,aAAApF,CAAakF,EAAA,SAAW,IAEjC,QAKIG,EAAO,SAACF,GAAD,MAAuB,CAClCA,KACAZ,KAAM,GACND,QAAQ,EACRD,OAAO,IAIHiB,EAActF,OAAAuF,EAAA,EAAAvF,CAAwB,SAAAwF,GAAI,OAAIA,EAAKjB,MAArCvE,CAA2CuF,EAAA,GACzDE,EAAgBzF,OAAAuF,EAAA,EAAAvF,CAAyB,SAAAwF,GAAI,OAAIA,EAAKlB,QAAtCtE,CAA8CuF,EAAA,GAC9DG,EAAU1F,OAAA2F,EAAA,aAAA3F,GAAqB4F,OAAOH,EAAeH,GAGrDO,EAAeC,EAAA,EAAkB9F,OAAA+F,EAAA,EAAA/F,GAA2BgG,EAAA,OAE5DC,EAAa,SAACC,GAAD,OACjBlG,OAAA+F,EAAA,EAAA/F,CAAKA,OAAA+F,EAAA,EAAA/F,CAAiB2F,EAAA,WAAtB3F,CAAkC,EAAGA,OAAOmG,OAAOD,GAAOE,IAAI,SAAAZ,GAAI,OAAIA,EAAKL,MAAO,GAS9EkB,EAAcC,EAAA,EAAKC,UAALD,CAAuB,WACrCE,EAAkBH,EAAYI,YAAYH,EAAA,EAAKC,UAALD,CAAsB,SAChEI,EAAYJ,EAAA,EAAKC,UAALD,CAAuB,SACnCK,EAAmB,SAACxB,GAAD,OAAgBuB,EAAUD,YAAYzG,OAAA4G,EAAA,EAAA5G,GAAiB6G,GAAGC,OAAO3B,KAAM4B,aAAaT,EAAA,EAAMU,SAG7GC,EAASjH,OAAAkH,EAAA,SAAAlH,CAAS,CACtBmH,IAAK,GACLC,KAAMpH,OAAAkH,EAAA,OAAAlH,GACNqH,KAAMrH,OAAAkH,EAAA,OAAAlH,GACNsH,WAAYtH,OAAAkH,EAAA,OAAAlH,GACZuH,UAAWvH,OAAAkH,EAAA,OAAAlH,GACXwH,OAAQxH,OAAAkH,EAAA,OAAAlH,GACRyH,WAAYzH,OAAAkH,EAAA,OAAAlH,KAMR0H,EAAwBC,EAAA,KAAKC,KAAKD,EAAA,KAAK5F,IAAIf,EAAQ,KAAiBkE,EAAA,MAAQD,IAAQ,SAAA4C,GAAQ,OAAIZ,EAAOI,KAAK,CAAEQ,eAG9GC,EAAiC,CACrC,CACEC,QAAS1C,EAAK,GACda,MAAO,IAETwB,GA0FIM,EAAML,EAAA,KAAKM,QAAQH,EAvFV,SAACI,EAAgBC,GAAjB,OACblB,EAAOmB,MAAMF,EAAQ,CACnBf,IAAK,WAEH,IAAMjB,EAAQlG,OAAAqI,EAAA,KAAArI,CACZmI,EAAMjC,MACNJ,EAAA,EAAWgB,OAAOqB,EAAMJ,QAAQ5C,IAAKgD,EAAMJ,UAI7C,MAAO,CACL,CACEA,QAHY1C,EAAKY,EAAWC,IAI5BA,SAEFyB,EAAA,IAAIW,OAGRlB,KAAM,SAAAhE,GAAA,IAAGoC,EAAHpC,EAAGoC,KAAH,MAAc,CAACa,EAAYkC,IAAI/C,EAAhBa,CAAsB8B,GAAQR,EAAA,IAAIW,OACvDjB,KAAM,SAAAmB,GAAA,IAAGX,EAAHW,EAAGX,SAAH,OACJ7H,OAAAqI,EAAA,KAAArI,CACE6H,EACAY,EAAA,KAEE,iBAAM,CAACN,EAAOR,EAAA,IAAIW,OAElB,SAAAT,GACE,IAAM3B,EAAQL,EAAagC,EAASa,KAAM,SAAAlD,GAAI,MAAI,CAACsB,OAAOtB,EAAKL,IAAKK,KAEpE,MAAO,CACL,CACEuC,QAHY1C,EAAKY,EAAWC,IAI5BA,SAEFyB,EAAA,IAAIW,UAKdhB,WAAY,SAAAqB,GAAA,IAAGnD,EAAHmD,EAAGnD,KAAH,MAAc,CAACmB,EAAiBnB,EAAKL,IAAIyD,OAAO,SAAApD,GAAI,OAAAqD,EAAA,GAAUrD,EAAV,CAAgBlB,QAASkB,EAAKlB,UAAnEqC,CAA8EwB,GAAQR,EAAA,IAAIW,OACrHf,UAAW,SAAAuB,GAAA,IAAGtD,EAAHsD,EAAGtD,KAAH,MAAc,CAACmB,EAAiBnB,EAAKL,IAAIyD,OAAO,SAAApD,GAAI,OAAAqD,EAAA,GAAUrD,EAAV,CAAgBnB,OAAQmB,EAAKnB,SAAlEsC,CAA4EwB,GAAQR,EAAA,IAAIW,OAClHd,OAAQ,SAAAuB,GAAA,IAAGvD,EAAHuD,EAAGvD,KAAH,MAAc,CAACkB,EAAUkC,OAAO9C,EAAA,EAAWgB,OAAOtB,EAAKL,KAAxCuB,CAA8CyB,GAAQR,EAAA,IAAIW,OACjFb,WAAY,SAAAuB,GAAA,IAAGzE,EAAHyE,EAAGzE,KAAH,MAAc,CAACiC,EAAgB+B,IAAIhE,EAApBiC,CAA0B2B,GAAQR,EAAA,IAAIW,OACjEW,QAAS,iBAAM,CAACd,EAAOR,EAAA,IAAIW,UAGlB,SAACH,GAEZ,IAAMjC,EAAQlG,OAAAkJ,EAAA,EAAAlJ,CAAK0F,EAAL1F,CAAcA,OAAOmG,OAAOgC,EAAMjC,QAC1C7C,EAAO6C,EAAMiD,OAAO,SAAA3D,GAAI,OAAIA,EAAKlB,SAAQzE,OACzCyD,EAAQ4C,EAAMrG,OAEd6D,EAAY0F,EAAA,OAAStD,EAAA,EAASgB,OAAOqB,EAAMJ,QAAQ5C,IAAKgD,EAAMjC,QAEpE,OAAO,SAACmD,GAAD,OACL9F,EAAA,qBAAKC,UAAU,QACbD,EAAA,qBAAKC,UAAU,eACbD,EAAA,oBAAIC,UAAU,cACZD,EAAA,cAACJ,EAAK,CAACE,KAAMA,EAAMC,MAAOA,MAG9BC,EAAA,qBAAKC,UAAU,aACbD,EAAA,cAACE,EAAQ,CACPC,UAAWA,EACXvB,MAAOgG,EAAMJ,QAAQxD,KACrBX,SAAU,SAAAW,GAAI,OAAI8E,EAASpC,EAAOQ,WAAW,CAAElD,WAC/CV,SAAU,kBAAMwF,EAASpC,EAAOE,WAGpC5D,EAAA,oBAAIC,UAAU,+BAED,IAAVF,EAAcC,EAAA,cAACY,EAAS,MAAM,KAC9B+B,EAAME,IAAI,SAAAZ,GAAI,OACbjC,EAAA,cAACa,EAAapE,OAAAsJ,OAAA,CACZ7G,IAAK+C,EAAKL,IACNK,EAAI,CACRhB,OAAQ,kBAAM6E,EAASpC,EAAOG,KAAK,CAAE5B,WACrCb,SAAU,kBAAM0E,EAASpC,EAAOO,OAAO,CAAEhC,WACzCd,aAAc,kBAAM2E,EAASpC,EAAOK,WAAW,CAAE9B,WACjDf,YAAa,kBAAM4E,EAASpC,EAAOM,UAAU,CAAE/B,qBAU3DmC,EAAA,KAAK4B,IAAIvB,EAAK,SAAAwB,GACZC,EAAA,OAAgBD,EAAKE,SAASC,eAAe","file":"main.921b6f572678e8851e64.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([135,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"tasks.0c02cb5452c7fc595b2a17905485db36.json\";","import * as React from 'react'\n\nexport interface Props {\n  done: number\n  total: number\n}\n\nexport const Title: React.FunctionComponent<Props> = ({ done, total }: Props) => (\n  <>\n    Simple Todo&nbsp;\n    <span className=\"text-muted small\">\n      {done} / {total}\n    </span>\n  </>\n)\n","import * as React from 'react'\n\nexport interface Props {\n  isEditing: boolean\n  value: string\n  onChange: (text: string) => void\n  onSubmit: () => void\n}\n\nexport const TaskForm: React.FunctionComponent<Props> = ({ isEditing, value, onChange, onSubmit }: Props) => (\n  <div className=\"input-group\">\n    <input type=\"text\" className=\"form-control\" name=\"task\" value={value} onChange={event => onChange(event.target.value)} />\n    <div className=\"input-group-append\">\n      <button type=\"submit\" className=\"btn btn-primary\" onClick={onSubmit} disabled={value === ''}>\n        {isEditing ? 'Edit' : 'Add'}\n      </button>\n    </div>\n  </div>\n)\n","import * as React from 'react'\n\nexport const EmptyTask: React.FunctionComponent = () => (\n  <li className=\"list-group-item\">\n    <em>Task list is empty.</em>\n  </li>\n)\n","import * as React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faCheckSquare, faStar, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { faSquare, faStar as faStarEmpty } from '@fortawesome/free-regular-svg-icons'\n\nexport interface Props {\n  isFav: boolean\n  isDone: boolean\n  text: string\n\n  onToggleFav: () => void\n  onToggleDone: () => void\n  onEdit: () => void\n  onRemove: () => void\n}\n\nexport const Task: React.FunctionComponent<Props> = ({ isFav, isDone, text, onEdit, onToggleFav, onToggleDone, onRemove }) => (\n  <li className=\"task-container list-group-item d-flex justify-content-between align-items-center\">\n    <div>\n      <a href=\"#\" className=\"btn-left\" onClick={onToggleFav}>\n        <FontAwesomeIcon icon={isFav ? faStar : faStarEmpty} />\n      </a>\n      <a href=\"#\" className=\"btn-left\" onClick={onToggleDone}>\n        <FontAwesomeIcon icon={isDone ? faCheckSquare : faSquare} />\n      </a>\n      {!isDone ? text : <del className=\"text-muted\">{text}</del>}\n    </div>\n    <div>\n      <a href=\"#\" className=\"btn-right\" onClick={onEdit}>\n        <FontAwesomeIcon icon={faEdit} />\n      </a>\n      <a href=\"#\" className=\"btn-right\" onClick={onRemove}>\n        <FontAwesomeIcon icon={faTimes} />\n      </a>\n    </div>\n  </li>\n)\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { contramap, ordBoolean, ordString } from 'fp-ts/es6/Ord'\nimport { sort } from 'fp-ts/es6/Array'\nimport * as R from 'fp-ts/es6/Record'\nimport * as O from 'fp-ts/es6/Option'\nimport { pipe } from 'fp-ts/es6/pipeable'\nimport { atRecord } from 'monocle-ts/es6/At/Record'\nimport { Prism, Lens } from 'monocle-ts/es6'\nimport { getSemigroup, ordNumber } from 'fp-ts/lib/Ord'\nimport * as E from 'fp-ts/lib/Either'\nimport * as t from 'io-ts'\nimport { withFallback } from 'io-ts-types/lib/withFallback'\nimport { getFirstSemigroup, getJoinSemigroup, fold } from 'fp-ts/es6/Semigroup'\nimport * as A from 'fp-ts/lib/Array'\nimport { cmd, html, http, platform } from 'effe-ts'\nimport { unionize, ofType, UnionOf } from 'unionize'\nimport { Title } from './components/Title'\nimport { TaskForm } from './components/TaskForm'\nimport { EmptyTask } from './components/EmptyTask'\nimport { Task as TaskComponent } from './components/Task'\n\nconst Task = t.interface(\n  {\n    id: t.number,\n    text: t.string,\n    isDone: t.boolean,\n    isFav: withFallback(t.boolean, false)\n  },\n  'Task'\n)\ntype Task = t.TypeOf<typeof Task>\n\n// Function for creating an empty task\nconst task = (id: number): Task => ({\n  id,\n  text: '',\n  isDone: false,\n  isFav: false\n})\n\n// Define how tasks should be ordered\nconst ordTaskText = contramap<string, Task>(task => task.text)(ordString) // Order by text\nconst ordTaskIsDone = contramap<boolean, Task>(task => task.isDone)(ordBoolean) // Order by isDone\nconst ordTask = getSemigroup<Task>().concat(ordTaskIsDone, ordTaskText) // Combine both ordering strategies\n\n// Util\nconst groupTasksBy = R.fromFoldableMap(getFirstSemigroup<Task>(), A.array)\n// Determine the next task id by getting the maximum task id and add one. If empty return 1 as default value\nconst nextTaskId = (tasks: Record<string, Task>) =>\n  fold(getJoinSemigroup(ordNumber))(1, Object.values(tasks).map(task => task.id)) + 1\n\n// The single state tree used by the application\ninterface Model {\n  current: Task\n  tasks: Record<string, Task>\n}\n\n// Lenses for the `Model`\nconst currentLens = Lens.fromProp<Model>()('current')\nconst currentTextLens = currentLens.composeLens(Lens.fromProp<Task>()('text'))\nconst tasksLens = Lens.fromProp<Model>()('tasks')\nconst taskByIdOptional = (id: number) => tasksLens.composeLens(atRecord<Task>().at(String(id))).composePrism(Prism.some())\n\n// All actions that can happen in our application\nconst Action = unionize({\n  Add: {},\n  Edit: ofType<{ task: Task }>(),\n  Load: ofType<{ response: E.Either<http.HttpErrorResponse, http.Response<Task[]>> }>(),\n  ToggleDone: ofType<{ task: Task }>(),\n  ToggleFav: ofType<{ task: Task }>(),\n  Remove: ofType<{ task: Task }>(),\n  UpdateText: ofType<{ text: string }>()\n})\ntype Action = UnionOf<typeof Action>\n\n// Commands\n// Load tasks from json file\nconst load: cmd.Cmd<Action> = http.send(http.get(require('./tasks.json'), t.array(Task)), response => Action.Load({ response }))\n\n// Generate the initial state of our application and trigger a command if wanted\nconst init: [Model, cmd.Cmd<Action>] = [\n  {\n    current: task(1),\n    tasks: {}\n  },\n  load\n]\n\nconst update = (action: Action, model: Model): [Model, cmd.Cmd<Action>] =>\n  Action.match(action, {\n    Add: () => {\n      // Add the new task to the existing tasks\n      const tasks = pipe(\n        model.tasks,\n        R.insertAt(String(model.current.id), model.current)\n      )\n      // Generate the new current task based on the newly created tasks record to determine the next possible id\n      const current = task(nextTaskId(tasks))\n      return [\n        {\n          current,\n          tasks\n        },\n        cmd.none\n      ]\n    },\n    Edit: ({ task }) => [currentLens.set(task)(model), cmd.none],\n    Load: ({ response }) =>\n      pipe(\n        response,\n        E.fold(\n          // If the response is an error do nothing by returning the current model\n          () => [model, cmd.none],\n          // Else evaluate the http response\n          response => {\n            const tasks = groupTasksBy(response.body, task => [String(task.id), task])\n            const current = task(nextTaskId(tasks))\n            return [\n              {\n                current,\n                tasks\n              },\n              cmd.none\n            ]\n          }\n        )\n      ),\n    ToggleDone: ({ task }) => [taskByIdOptional(task.id).modify(task => ({ ...task, isDone: !task.isDone }))(model), cmd.none],\n    ToggleFav: ({ task }) => [taskByIdOptional(task.id).modify(task => ({ ...task, isFav: !task.isFav }))(model), cmd.none],\n    Remove: ({ task }) => [tasksLens.modify(R.deleteAt(String(task.id)))(model), cmd.none],\n    UpdateText: ({ text }) => [currentTextLens.set(text)(model), cmd.none],\n    default: () => [model, cmd.none]\n  })\n\nconst view = (model: Model) => {\n  // Convert tasks record to array and sort\n  const tasks = sort(ordTask)(Object.values(model.tasks))\n  const done = tasks.filter(task => task.isDone).length\n  const total = tasks.length\n  // If the current task id is equal to a task that already exists in tasks we are editing\n  const isEditing = O.isSome(R.lookup(String(model.current.id), model.tasks))\n\n  return (dispatch: platform.Dispatch<Action>) => (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h3 className=\"card-title\">\n          <Title done={done} total={total} />\n        </h3>\n      </div>\n      <div className=\"card-body\">\n        <TaskForm\n          isEditing={isEditing}\n          value={model.current.text}\n          onChange={text => dispatch(Action.UpdateText({ text }))}\n          onSubmit={() => dispatch(Action.Add())}\n        />\n      </div>\n      <ul className=\"list-group list-group-flush\">\n        {/* If we have no tasks we show a placeholder */}\n        {total === 0 ? <EmptyTask /> : null}\n        {tasks.map(task => (\n          <TaskComponent\n            key={task.id}\n            {...task}\n            onEdit={() => dispatch(Action.Edit({ task }))}\n            onRemove={() => dispatch(Action.Remove({ task }))}\n            onToggleDone={() => dispatch(Action.ToggleDone({ task }))}\n            onToggleFav={() => dispatch(Action.ToggleFav({ task }))}\n          />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nconst app = html.program(init, update, view)\n\nhtml.run(app, dom => {\n  ReactDOM.render(dom, document.getElementById('app'))\n})\n"],"sourceRoot":""}