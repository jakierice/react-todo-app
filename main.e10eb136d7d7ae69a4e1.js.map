{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/api.ts","webpack:///./src/components/Title.tsx","webpack:///./src/components/EmptyTodos.tsx","webpack:///./src/components/LoadingTodos.tsx","webpack:///./src/components/TodoForm.tsx","webpack:///./src/random.ts","webpack:///./src/containers/TodoForm.tsx","webpack:///./src/components/Todo.tsx","webpack:///./src/components/TodoEdit.tsx","webpack:///./src/containers/Todo.tsx","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Doc","stats","done","total","className","_id","text","isDone","isFav","withFallback","_rev","Response","ok","id","rev","Action","Add","Change","Load","Remove","Update","load","send","total_rows","offset","rows","doc","todo","del","response","put","encode","changes$","Subject","lastSeq$","BehaviorSubject","isRunning$","poll$","from","json","body","results","forEach","next","changes","_deleted","seq","decode","last_seq","isRunning","empty","subscribe","onChange","onSubmit","event","preventDefault","type","target","disabled","seed","seedLens","fromProp","todoLens","todoTextLens","composeLens","Api","UpdateText","v1","msecs","onEdit","onToggleFav","onToggleDone","onRemove","href","onClick","icon","onSave","onCancel","Model","Editing","None","model","match","_","isDoneLens","isFavLens","idLens","revLens","textLens","editingTextOptional","default","Cancel","Edit","Save","ToggleDone","ToggleFav","of","ordCaseInsensitiveString","str","toLocaleLowerCase","ordTodoText","ordTodoIsDone","ordTodo","concat","sortTodos","currentLens","todosLens","todosOptional","composePrism","some","at","todoModel","modify","Todo","TodoForm","monoidCmd","getMonoid","monoidState","getApplicative","app","programWithFlags","flags","rand","init","none","todoCmd","map","current","todos","action","row","ap","set","getOption","change","updated","formModel","filter","dispatch","run","Date","now","Math","random","dom","document","getElementById"],"mappings":"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","file":"main.e10eb136d7d7ae69a4e1.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([168,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Union, of } from 'ts-union'\nimport * as t from 'io-ts'\nimport { cmd, http } from 'effe-ts'\nimport { withFallback } from 'io-ts-types/lib/withFallback'\nimport { Observable, Subject, BehaviorSubject, empty, from } from 'rxjs'\nimport { fromFetch } from 'rxjs/fetch'\nimport * as E from 'fp-ts/lib/Either'\nimport * as rx from 'rxjs/operators'\nimport { pipe } from 'fp-ts/lib/pipeable'\n\nexport const Todo = t.interface(\n  {\n    _id: t.string,\n    text: t.string,\n    isDone: t.boolean,\n    isFav: withFallback(t.boolean, false)\n  },\n  'Todo'\n)\nexport type Todo = t.TypeOf<typeof Todo>\n\nexport const Document = <A, O>(Doc: t.Type<A, O>) =>\n  t.intersection([\n    t.interface({\n      _rev: t.string\n    }),\n    Doc\n  ])\nexport type Document<D> = D & { _rev: string }\n\nexport const AllDocsResponse = <A, O>(Doc: t.Type<A, O>) =>\n  t.interface(\n    {\n      total_rows: t.Int,\n      offset: t.Int,\n      rows: t.array(\n        t.interface({\n          id: t.string,\n          key: t.string,\n          doc: Document(Doc),\n          value: t.interface({\n            rev: t.string\n          })\n        })\n      )\n    },\n    'AllDocsResponse'\n  )\nexport interface AllDocsResponse<D> {\n  total_rows: t.Int\n  offset: t.Int\n  rows: {\n    id: string\n    key: string\n    doc: Document<D>\n    value: {\n      rev: string\n    }\n  }[]\n}\n\nexport const Response = t.interface(\n  {\n    ok: t.boolean,\n    id: t.string,\n    rev: t.string\n  },\n  'Response'\n)\nexport type Response = t.TypeOf<typeof Response>\n\nexport const Change = <A, O>(Doc: t.Type<A, O>) =>\n  t.interface({\n    changes: t.array(t.interface({ rev: t.string })),\n    doc: t.union([\n      t.interface({\n        _id: t.string,\n        _rev: t.string,\n        _deleted: t.literal(true)\n      }),\n      Document(Doc)\n    ]),\n    id: t.string,\n    seq: t.Int\n  })\nexport interface Change<D> {\n  changes: { rev: string }[]\n  doc: { _id: string; _rev: string; _deleted: true } | Document<D>\n  id: string\n  seq: t.Int\n}\n\nexport const Action = Union({\n  Add: of<Todo, http.HttpResponseEither<Response>>(),\n  Change: of<E.Either<t.Errors, Change<Todo>>>(),\n  Load: of<http.HttpResponseEither<AllDocsResponse<Todo>>>(),\n  Remove: of<Todo, http.HttpResponseEither<Response>>(),\n  Update: of<Todo, http.HttpResponseEither<Response>>()\n})\nexport type Action = typeof Action.T\n\nexport const load: cmd.Cmd<Action> = http.send(http.get('/todos/_all_docs?include_docs=true', AllDocsResponse(Todo)), Action.Load)\nexport const add = (todo: Todo) =>\n  http.send(http.put(`/todos/${todo._id}`, Todo.encode(todo), Response), response => Action.Add(todo, response))\nexport const remove = (todo: Document<Todo>) =>\n  http.send(http.del(`/todos/${todo._id}?_rev=${todo._rev}`, Response), response => Action.Remove(todo, response))\nexport const update = (todo: Document<Todo>) =>\n  http.send(http.put(`/todos/${todo._id}?rev=${todo._rev}`, Document(Todo).encode(todo), Response), response =>\n    Action.Update(todo, response)\n  )\n\nconst changes$ = new Subject<Action>()\nconst lastSeq$ = new BehaviorSubject<string | t.Int>('now')\nconst isRunning$ = new BehaviorSubject(false)\n\nconst poll$: Observable<void> = pipe(\n  fromFetch(`/todos/_changes?feed=longpoll&include_docs=true&since=${lastSeq$.value}`),\n  rx.switchMap(response => from(response.json())),\n  rx.tap(body => {\n    body.results.forEach((result: unknown) => changes$.next(Action.Change(Change(Todo).decode(result))))\n    lastSeq$.next(body.last_seq)\n  }),\n  rx.switchMap(() => poll$)\n)\n\npipe(\n  isRunning$,\n  rx.distinctUntilChanged(),\n  rx.switchMap(isRunning => (isRunning ? poll$ : empty()))\n).subscribe()\n\nexport const changes = {\n  start: (): Observable<Action> => {\n    isRunning$.next(true)\n    return changes$\n  },\n  stop: (): Observable<Action> => {\n    isRunning$.next(false)\n    return empty()\n  }\n}\n","import * as O from 'fp-ts/lib/Option'\nimport { pipe } from 'fp-ts/lib/pipeable'\nimport * as React from 'react'\n\nexport interface Stats {\n  done: number\n  total: number\n}\n\nexport interface Props {\n  stats: O.Option<Stats>\n}\n\nexport const Title: React.FunctionComponent<Props> = ({ stats }: Props) => (\n  <>\n    Simple Todo&nbsp;\n    {pipe(\n      stats,\n      O.fold(\n        () => null,\n        ({ done, total }) => (\n          <span className=\"text-muted small\">\n            {done} / {total}\n          </span>\n        )\n      )\n    )}\n  </>\n)\n","import * as React from 'react'\n\nexport const EmptyTodos: React.FunctionComponent = () => (\n  <li className=\"list-group-item\">\n    <em>Task list is empty.</em>\n  </li>\n)\n","import * as React from 'react'\n\nexport const LoadingTodos: React.FunctionComponent = () => (\n  <li className=\"list-group-item\">\n    <em>Loading Tasks...</em>\n  </li>\n)\n","import * as React from 'react'\n\nexport interface Props {\n  value: string\n  onChange: (text: string) => void\n  onSubmit: () => void\n}\n\nexport const TodoForm: React.FunctionComponent<Props> = ({ value, onChange, onSubmit }: Props) => (\n  <form\n    onSubmit={event => {\n      onSubmit()\n      event.preventDefault()\n    }}>\n    <div className=\"input-group\">\n      <input type=\"text\" className=\"form-control\" name=\"task\" value={value} onChange={event => onChange(event.target.value)} />\n      <div className=\"input-group-append\">\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={value === ''}>\n          Add\n        </button>\n      </div>\n    </div>\n  </form>\n)\n","export const seed = (init: number): number => {\n  const result = init % 2147483647\n  return result <= 0 ? result + 2147483646 : result\n}\n\nexport const next = (seed: number) => (seed * 16807) % 2147483647\n","import { cmd, platform } from 'effe-ts'\nimport { Union, of } from 'ts-union'\nimport { Lens } from 'monocle-ts'\nimport { pipe } from 'fp-ts/lib/pipeable'\nimport * as api from '../api'\nimport { TodoForm } from '../components/TodoForm'\nimport * as random from '../random'\nimport uuid from 'uuid'\nimport * as React from 'react'\n\nexport interface Model {\n  seed: number\n  todo: api.Todo\n}\n\nexport const seedLens = Lens.fromProp<Model>()('seed')\nexport const todoLens = Lens.fromProp<Model>()('todo')\nexport const todoTextLens = todoLens.composeLens(Lens.fromProp<api.Todo>()('text'))\n\nexport const Action = Union({\n  Add: of(),\n  Api: of<api.Action>(),\n  UpdateText: of<{ text: string }>()\n})\nexport type Action = typeof Action.T\n\nexport const emptyTodo = (seed: number): api.Todo => ({\n  _id: uuid.v1({ msecs: seed }),\n  text: '',\n  isDone: false,\n  isFav: false\n})\n\nexport const init = (rand: number): [Model, cmd.Cmd<Action>] => {\n  const seed = random.seed(rand)\n  return [\n    {\n      seed,\n      todo: emptyTodo(seed)\n    },\n    cmd.none\n  ]\n}\n\nexport const update = (action: Action, model: Model): [Model, cmd.Cmd<Action>] =>\n  Action.match(action, {\n    Add: () => [\n      pipe(\n        model,\n        seedLens.modify(random.next),\n        todoLens.set(emptyTodo(model.seed))\n      ),\n      pipe(\n        api.add(model.todo),\n        cmd.map(Action.Api)\n      )\n    ],\n    UpdateText: ({ text }) => [\n      pipe(\n        model,\n        todoTextLens.set(text)\n      ),\n      cmd.none\n    ],\n    default: () => [model, cmd.none]\n  })\n\nexport const view = (model: Model) => (dispatch: platform.Dispatch<Action>) => (\n  <TodoForm\n    value={model.todo.text}\n    onChange={text => dispatch(Action.UpdateText({ text }))}\n    onSubmit={() => dispatch(Action.Add())}\n  />\n)\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faCheckSquare, faStar, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { faSquare, faStar as faStarEmpty } from '@fortawesome/free-regular-svg-icons'\nimport * as React from 'react'\n\nexport interface Props {\n  isFav: boolean\n  isDone: boolean\n  text: string\n\n  onToggleFav: () => void\n  onToggleDone: () => void\n  onEdit: () => void\n  onRemove: () => void\n}\n\nexport const Todo: React.FunctionComponent<Props> = ({ isFav, isDone, text, onEdit, onToggleFav, onToggleDone, onRemove }) => (\n  <li className=\"task-container list-group-item d-flex justify-content-between align-items-center\">\n    <div>\n      <a href=\"#\" className=\"btn-left\" onClick={onToggleFav}>\n        <FontAwesomeIcon icon={isFav ? faStar : faStarEmpty} />\n      </a>\n      <a href=\"#\" className=\"btn-left\" onClick={onToggleDone}>\n        <FontAwesomeIcon icon={isDone ? faCheckSquare : faSquare} />\n      </a>\n      {!isDone ? text : <del className=\"text-muted\">{text}</del>}\n    </div>\n    <div>\n      <a href=\"#\" className=\"btn-right\" onClick={onEdit}>\n        <FontAwesomeIcon icon={faEdit} />\n      </a>\n      <a href=\"#\" className=\"btn-right\" onClick={onRemove}>\n        <FontAwesomeIcon icon={faTimes} />\n      </a>\n    </div>\n  </li>\n)\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as React from 'react'\n\nexport interface Props {\n  text: string\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onCancel: () => void\n  onSave: () => void\n}\n\nexport const TodoEdit: React.FunctionComponent<Props> = ({ text, onChange, onSave, onCancel }) => (\n  <li className=\"task-container list-group-item\">\n    <form\n      onSubmit={event => {\n        onSave()\n        event.preventDefault()\n      }}>\n      <div className=\"input-group\">\n        <input className=\"form-control\" type=\"text\" value={text} onChange={onChange} />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-success\" type=\"submit\" disabled={text.length === 0}>\n            <FontAwesomeIcon icon={faSave} />\n          </button>\n          <button className=\"btn btn-danger\" type=\"button\" onClick={onCancel}>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </div>\n      </div>\n    </form>\n  </li>\n)\n","import { Union, of } from 'ts-union'\nimport { cmd, platform, state } from 'effe-ts'\nimport { not, identity } from 'fp-ts/lib/function'\nimport { pipe } from 'fp-ts/lib/pipeable'\nimport { Lens, Optional } from 'monocle-ts'\nimport * as O from 'fp-ts/lib/Option'\nimport { Todo } from '../components/Todo'\nimport * as api from '../api'\nimport { TodoEdit } from '../components/TodoEdit'\nimport * as React from 'react'\n\nexport interface Todo extends api.Document<api.Todo> {}\n\nexport const Model = Union({\n  Editing: of<Todo, string>(),\n  None: of<Todo>()\n})\nexport type Model = typeof Model.T\n\nexport const todoLens = new Lens<Model, Todo>(\n  model =>\n    Model.match(model, {\n      Editing: todo => todo,\n      None: todo => todo\n    }),\n  todo => model =>\n    Model.match(model, {\n      Editing: (_, text) => Model.Editing(todo, text),\n      None: () => Model.None(todo)\n    })\n)\nexport const isDoneLens = todoLens.composeLens(Lens.fromProp<Todo>()('isDone'))\nexport const isFavLens = todoLens.composeLens(Lens.fromProp<Todo>()('isFav'))\nexport const idLens = todoLens.composeLens(Lens.fromProp<Todo>()('_id'))\nexport const revLens = todoLens.composeLens(Lens.fromProp<Todo>()('_rev'))\nexport const textLens = todoLens.composeLens(Lens.fromProp<Todo>()('text'))\nexport const editingTextOptional = new Optional<Model, string>(\n  model =>\n    Model.match(model, {\n      Editing: (_, text) => O.some(text),\n      default: () => O.none\n    }),\n  text => model =>\n    Model.match(model, {\n      Editing: todo => Model.Editing(todo, text),\n      default: () => model\n    })\n)\n\nexport const Action = Union({\n  Api: of<api.Action>(),\n  Cancel: of(),\n  Edit: of(),\n  Save: of(),\n  ToggleDone: of(),\n  ToggleFav: of(),\n  Remove: of(),\n  UpdateText: of<string>()\n})\nexport type Action = typeof Action.T\n\nexport const init = (todo: api.Document<api.Todo>): [Model, cmd.Cmd<Action>] => state.of(Model.None(todo))\n\nexport const update = (action: Action, model: Model): [Model, cmd.Cmd<Action>] =>\n  Model.match(model, {\n    Editing: (todo, text) =>\n      Action.match(action, {\n        Cancel: () => state.of(Model.None(todo)),\n        Save: () => [\n          Model.None({ ...todo, text }),\n          pipe(\n            api.update({ ...todo, text }),\n            cmd.map(Action.Api)\n          )\n        ],\n        UpdateText: text => [\n          pipe(\n            model,\n            editingTextOptional.set(text)\n          ),\n          cmd.none\n        ],\n        default: () => state.of(model)\n      }),\n    None: todo =>\n      Action.match(action, {\n        Api: action =>\n          api.Action.match(action, {\n            Change: change =>\n              pipe(\n                change,\n                O.fromEither,\n                O.filter(change => change.doc._id === todo._id),\n                O.fold(\n                  () => state.of(model),\n                  ({ doc }) =>\n                    state.of(\n                      pipe(\n                        model,\n                        revLens.set(doc._rev)\n                      )\n                    )\n                )\n              ),\n            Update: (_, response) =>\n              state.of(\n                pipe(\n                  response,\n                  O.fromEither,\n                  O.filter(response => response.body.id === todo._id),\n                  O.fold(\n                    () => model,\n                    response =>\n                      pipe(\n                        model,\n                        revLens.set(response.body.rev)\n                      )\n                  )\n                )\n              ),\n            default: () => state.of(model)\n          }),\n        Edit: () => state.of(Model.Editing(todo, todo.text)),\n        Remove: () => [\n          model,\n          pipe(\n            api.remove(todo),\n            cmd.map(Action.Api)\n          )\n        ],\n        ToggleDone: () => {\n          const updated = pipe(\n            model,\n            isDoneLens.modify(not(identity))\n          )\n          return [\n            updated,\n            Model.match(updated, {\n              None: todo =>\n                pipe(\n                  api.update(todo),\n                  cmd.map(Action.Api)\n                ),\n              default: () => cmd.none\n            })\n          ]\n        },\n        ToggleFav: () => {\n          const updated = pipe(\n            model,\n            isFavLens.modify(not(identity))\n          )\n          return [\n            updated,\n            Model.match(updated, {\n              None: todo =>\n                pipe(\n                  api.update(todo),\n                  cmd.map(Action.Api)\n                ),\n              default: () => cmd.none\n            })\n          ]\n        },\n        default: () => state.of(model)\n      })\n  })\n\nexport const view = (model: Model) => (dispatch: platform.Dispatch<Action>) =>\n  Model.match(model, {\n    Editing: (todo, text) => (\n      <TodoEdit\n        key={todo._id}\n        text={text}\n        onCancel={() => dispatch(Action.Cancel())}\n        onChange={event => dispatch(Action.UpdateText(event.target.value))}\n        onSave={() => dispatch(Action.Save())}\n      />\n    ),\n    None: todo => (\n      <Todo\n        key={todo._id}\n        {...todo}\n        onEdit={() => dispatch(Action.Edit())}\n        onRemove={() => dispatch(Action.Remove())}\n        onToggleDone={() => dispatch(Action.ToggleDone())}\n        onToggleFav={() => dispatch(Action.ToggleFav())}\n      />\n    )\n  })\n","import { contramap, ordBoolean, ordString, getSemigroup } from 'fp-ts/lib/Ord'\nimport * as R from 'fp-ts/lib/Record'\nimport { pipe } from 'fp-ts/lib/pipeable'\nimport { atRecord } from 'monocle-ts/lib/At/Record'\nimport { Prism, Lens } from 'monocle-ts/lib'\nimport * as E from 'fp-ts/lib/Either'\nimport * as A from 'fp-ts/lib/Array'\nimport { cmd, html, state, platform } from 'effe-ts'\nimport { Union, of } from 'ts-union'\nimport * as O from 'fp-ts/lib/Option'\nimport * as NEA from 'fp-ts/lib/NonEmptyArray'\nimport * as rx from 'rxjs/operators'\nimport { fold } from 'fp-ts/lib/Monoid'\nimport * as T from 'fp-ts/lib/Tuple'\nimport { Title } from './components/Title'\nimport { EmptyTodos } from './components/EmptyTodos'\nimport { LoadingTodos } from './components/LoadingTodos'\nimport * as TodoForm from './containers/TodoForm'\nimport * as api from './api'\nimport * as Todo from './containers/Todo'\nimport * as ReactDOM from 'react-dom'\nimport * as React from 'react'\n\n// Define how tasks should be ordered\nconst ordCaseInsensitiveString = contramap<string, string>(str => str.toLocaleLowerCase())(ordString)\nconst ordTodoText = contramap<string, Todo.Model>(Todo.textLens.get)(ordCaseInsensitiveString) // Order by text\nconst ordTodoIsDone = contramap<boolean, Todo.Model>(Todo.isDoneLens.get)(ordBoolean) // Order by isDone\nconst ordTodo = getSemigroup<Todo.Model>().concat(ordTodoIsDone, ordTodoText) // Combine both ordering strategies\nconst sortTodos = A.sort(contramap<Todo.Model, [string, Todo.Model]>(([_, todo]) => todo)(ordTodo))\n\ninterface Todos extends Record<string, Todo.Model> {}\n\n// The single state tree used by the application\ninterface Model {\n  current: TodoForm.Model\n  todos: O.Option<Todos>\n}\n\n// Lenses for the `Model`\nconst currentLens = Lens.fromProp<Model>()('current')\nconst todosLens = Lens.fromProp<Model>()('todos')\nconst todosOptional = todosLens.composePrism(Prism.some())\nconst todoByIdOptional = (id: string) => todosOptional.composeLens(atRecord<Todo.Model>().at(id)).composePrism(Prism.some())\nconst insertTodo = (id: string, model: Model) => (todoModel: Todo.Model): Model =>\n  pipe(\n    model,\n    todosOptional.modify(R.insertAt(id, todoModel))\n  )\n\n// All actions that can happen in our application\nconst Action = Union({\n  Api: of<api.Action>(),\n  Todo: of<string, Todo.Action>(),\n  TodoForm: of<TodoForm.Action>()\n})\ntype Action = typeof Action.T\nconst monoidCmd = cmd.getMonoid<Action>()\nconst monoidState = state.getApplicative<Action>()\n\ninterface Flags {\n  seed: number\n}\n\n// Generate the initial state of our application and trigger a command if wanted\nconst init = (flags: Flags): [Model, cmd.Cmd<Action>] =>\n  pipe(\n    TodoForm.init(flags.seed),\n    T.bimap(\n      todoCmd =>\n        fold(monoidCmd)([\n          pipe(\n            todoCmd,\n            cmd.map(Action.TodoForm)\n          ),\n          pipe(\n            api.load,\n            cmd.map(Action.Api)\n          )\n        ]),\n      current => ({\n        current,\n        todos: O.none\n      })\n    )\n  )\n\nconst update = (action: Action, model: Model): [Model, cmd.Cmd<Action>] =>\n  Action.match(action, {\n    Api: action =>\n      api.Action.match(action, {\n        Add: (todo, response) =>\n          pipe(\n            response,\n            E.fold(\n              () => state.of(model),\n              response =>\n                pipe(\n                  Todo.init({\n                    ...todo,\n                    _rev: response.body.rev\n                  }),\n                  T.bimap(cmd.map(action => Action.Todo(todo._id, action)), insertTodo(todo._id, model))\n                )\n            )\n          ),\n        Change: E.fold(\n          () => state.of(model),\n          ({ doc }) => {\n            if ('_deleted' in doc) {\n              return state.of(\n                pipe(\n                  model,\n                  todosOptional.modify(R.deleteAt(doc._id))\n                )\n              )\n            } else {\n              return pipe(\n                Todo.init(doc),\n                T.bimap(cmd.map(action => Action.Todo(doc._id, action)), insertTodo(doc._id, model))\n              )\n            }\n          }\n        ),\n        Load: E.fold(\n          // If the response is an error do nothing by returning the current model\n          () => state.of(model),\n          // Else evaluate the http response\n          response =>\n            pipe(\n              response.body.rows.map(row => Todo.init(row.doc)),\n              A.reduce(state.of<Todos, Action>({}), (result, [todoModel, todoCmd]) => {\n                const id = pipe(\n                  todoModel,\n                  Todo.idLens.get\n                )\n                return monoidState.ap(\n                  [\n                    R.insertAt(id, todoModel),\n                    pipe(\n                      todoCmd,\n                      cmd.map(action => Action.Todo(id, action))\n                    )\n                  ],\n                  result\n                )\n              }),\n              T.map(todos =>\n                pipe(\n                  model,\n                  todosLens.set(O.some(todos))\n                )\n              )\n            )\n        ),\n        Remove: (todo, response) =>\n          state.of(\n            pipe(\n              response,\n              E.fold(\n                () => model,\n                () =>\n                  pipe(\n                    model,\n                    todosOptional.modify(R.deleteAt(todo._id))\n                  )\n              )\n            )\n          ),\n        default: () => state.of(model)\n      }),\n    Todo: (id, action) =>\n      pipe(\n        model,\n        todoByIdOptional(id).getOption,\n        O.fold(\n          () => state.of(model),\n          todoModel =>\n            pipe(\n              Todo.update(action, todoModel),\n              T.bimap(cmd.map(action => Action.Todo(id, action)), todoModel =>\n                pipe(\n                  model,\n                  todoByIdOptional(id).set(todoModel)\n                )\n              )\n            )\n        )\n      ),\n    TodoForm: action =>\n      pipe(\n        TodoForm.update(action, model.current),\n        T.bimap(cmd.map(Action.TodoForm), formModel =>\n          pipe(\n            model,\n            currentLens.set(formModel)\n          )\n        )\n      ),\n    default: () => state.of(model)\n  })\n\nconst view = (model: Model) => {\n  // Convert todos record to non empty array and sort it\n  // The result is a Option<Option<NonEmptyArray<Todo>>> type\n  // The most outer Option signalize the loading state. The inner Option signalize if the array is empty or not\n  // and the internal array has at least one Todo element\n  const todos = pipe(\n    model.todos,\n    O.map(todos => NEA.fromArray(sortTodos(R.toArray(todos))))\n  )\n  const stats = pipe(\n    todos,\n    O.flatten,\n    O.map(todos => ({\n      done: todos.filter(([_, todo]) => Todo.isDoneLens.get(todo)).length,\n      total: todos.length\n    }))\n  )\n\n  return (dispatch: platform.Dispatch<Action>) => (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h3 className=\"card-title\">\n          <Title stats={stats} />\n        </h3>\n      </div>\n      <div className=\"card-body\">{TodoForm.view(model.current)(action => dispatch(Action.TodoForm(action)))}</div>\n      <ul className=\"list-group list-group-flush\">\n        {pipe(\n          // Unpacking the todos Option<Option<NonEmptyArray<Todo>>> object\n          todos,\n          O.fold(\n            // If the most outer Option is none the app is loading the todos\n            () => <LoadingTodos />,\n            // Else we most outer Option is some and we need evaluate the inner Option.\n            // Note: `fold` returns a new function that accepts the Option<NonEmptyArray<Todo>> type so the `pipe` call would be redundant\n            O.fold(\n              // If the the inner Option is none the array is empty\n              () => <EmptyTodos />,\n              // Else the todos were loaded and the array is not empty\n              todos => <>{todos.map(([id, model]) => Todo.view(model)(action => dispatch(Action.Todo(id, action))))}</>\n            )\n          )\n        )}\n      </ul>\n    </div>\n  )\n}\n\nconst app = html.programWithFlags(init, update, view, model =>\n  pipe(\n    model.todos,\n    O.fold(api.changes.stop, api.changes.start),\n    rx.map(Action.Api)\n  )\n)\n\nhtml.run(\n  app({\n    seed: Date.now() * Math.random()\n  }),\n  dom => {\n    ReactDOM.render(dom, document.getElementById('app'))\n  }\n)\n"],"sourceRoot":""}