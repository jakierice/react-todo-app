{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/api.ts","webpack:///./src/components/Title.tsx","webpack:///./src/components/EmptyTodos.tsx","webpack:///./src/components/LoadingTodos.tsx","webpack:///./src/components/TodoForm.tsx","webpack:///./src/random.ts","webpack:///./src/containers/TodoForm.tsx","webpack:///./src/components/Todo.tsx","webpack:///./src/components/TodoEdit.tsx","webpack:///./src/containers/Todo.tsx","webpack:///./src/App.tsx","webpack:///./src/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Doc","stats","done","total","className","_id","text","isDone","isFav","withFallback","_rev","Response","ok","id","rev","Action","Add","Change","Load","Remove","Update","load","send","total_rows","offset","rows","doc","todo","del","response","put","encode","onChange","onSubmit","event","preventDefault","type","target","disabled","next","seed","seedLens","fromProp","todoLens","todoTextLens","composeLens","Api","UpdateText","v1","msecs","env","init","none","action","model","match","modify","set","map","default","onEdit","onToggleFav","onToggleDone","onRemove","href","onClick","icon","onSave","onCancel","Model","Editing","None","_","isDoneLens","isFavLens","idLens","revLens","textLens","editingTextOptional","Cancel","Edit","Save","ToggleDone","ToggleFav","of","ordCaseInsensitiveString","str","toLocaleLowerCase","ordTodoText","ordTodoIsDone","ordTodo","concat","sortTodos","currentLens","todosLens","todosOptional","composePrism","some","at","todoModel","Todo","TodoForm","monoidCmd","getMonoid","applicativeState","getApplicative","isRunning$","lastSeq$","BehaviorSubject","poll$","json","body","last_seq","from","results","changes","_deleted","seq","decode","isRunning","empty","todos","app","programR","todoCmd","current","row","ap","getOption","change","updated","formModel","dispatch","filter","run","dom","document","getElementById","http","fetch","Date","now","Math","random"],"mappings":"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","file":"main.ef04cfcdfdc454d17443.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([184,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Union, of } from 'ts-union'\nimport * as t from 'io-ts'\nimport { cmdr, http, subr } from 'effe-ts'\nimport { withFallback } from 'io-ts-types/lib/withFallback'\nimport { Observable, BehaviorSubject, empty, from, concat } from 'rxjs'\nimport { fromFetch } from 'rxjs/fetch'\nimport * as E from 'fp-ts/lib/Either'\nimport * as rx from 'rxjs/operators'\nimport { pipe } from 'fp-ts/lib/pipeable'\n\nexport const Todo = t.interface(\n  {\n    _id: t.string,\n    text: t.string,\n    isDone: t.boolean,\n    isFav: withFallback(t.boolean, false)\n  },\n  'Todo'\n)\nexport interface Todo extends t.TypeOf<typeof Todo> {}\n\nexport const Document = <A, O>(Doc: t.Type<A, O>) =>\n  t.intersection([\n    t.interface({\n      _rev: t.string\n    }),\n    Doc\n  ])\nexport type Document<D> = D & { _rev: string }\n\nexport const AllDocsResponse = <A, O>(Doc: t.Type<A, O>) =>\n  t.interface(\n    {\n      total_rows: t.Int,\n      offset: t.Int,\n      rows: t.array(\n        t.interface({\n          id: t.string,\n          key: t.string,\n          doc: Document(Doc),\n          value: t.interface({\n            rev: t.string\n          })\n        })\n      )\n    },\n    'AllDocsResponse'\n  )\nexport interface AllDocsResponse<D> {\n  total_rows: t.Int\n  offset: t.Int\n  rows: {\n    id: string\n    key: string\n    doc: Document<D>\n    value: {\n      rev: string\n    }\n  }[]\n}\n\nexport const Response = t.interface(\n  {\n    ok: t.boolean,\n    id: t.string,\n    rev: t.string\n  },\n  'Response'\n)\nexport interface Response extends t.TypeOf<typeof Response> {}\n\nexport const Change = <A, O>(Doc: t.Type<A, O>) =>\n  t.interface({\n    changes: t.array(t.interface({ rev: t.string })),\n    doc: t.union([\n      t.interface({\n        _id: t.string,\n        _rev: t.string,\n        _deleted: t.literal(true)\n      }),\n      Document(Doc)\n    ]),\n    id: t.string,\n    seq: t.Int\n  })\nexport interface Change<D> {\n  changes: { rev: string }[]\n  doc: { _id: string; _rev: string; _deleted: true } | Document<D>\n  id: string\n  seq: t.Int\n}\n\nexport const Action = Union({\n  Add: of<Todo, http.HttpResponseEither<Response>>(),\n  Change: of<E.Either<t.Errors, Change<Todo>>>(),\n  Load: of<http.HttpResponseEither<AllDocsResponse<Todo>>>(),\n  Remove: of<Todo, http.HttpResponseEither<Response>>(),\n  Update: of<Todo, http.HttpResponseEither<Response>>()\n})\nexport type Action = typeof Action.T\n\nexport interface ApiEnv extends http.HttpEnv {}\n\nexport const load: cmdr.CmdR<ApiEnv, Action> = http.send(\n  http.get('/todos/_all_docs?include_docs=true', AllDocsResponse(Todo)),\n  Action.Load\n)\nexport const add = (todo: Todo) =>\n  http.send(http.put(`/todos/${todo._id}`, Todo.encode(todo), Response), response => Action.Add(todo, response))\nexport const remove = (todo: Document<Todo>) =>\n  http.send(http.del(`/todos/${todo._id}?_rev=${todo._rev}`, Response), response => Action.Remove(todo, response))\nexport const update = (todo: Document<Todo>) =>\n  http.send(http.put(`/todos/${todo._id}?rev=${todo._rev}`, Document(Todo).encode(todo), Response), response =>\n    Action.Update(todo, response)\n  )\n\nexport const subscriptions: subr.SubR<ApiEnv, boolean, Action> = () => isRunning$ => {\n  const lastSeq$ = new BehaviorSubject<string | t.Int>('now')\n  const poll$: Observable<Action> = pipe(\n    fromFetch(`/todos/_changes?feed=longpoll&include_docs=true&since=${lastSeq$.value}`),\n    rx.switchMap(response => response.json()),\n    rx.tap(body => lastSeq$.next(body.last_seq)),\n    rx.switchMap(body =>\n      concat(from<Array<Action>>(body.results.map((result: unknown) => Action.Change(Change(Todo).decode(result)))), poll$)\n    )\n  )\n\n  return pipe(\n    isRunning$,\n    rx.distinctUntilChanged(),\n    rx.switchMap(isRunning => (isRunning ? poll$ : empty()))\n  )\n}\n","import * as O from 'fp-ts/lib/Option'\nimport { pipe } from 'fp-ts/lib/pipeable'\nimport * as React from 'react'\n\nexport interface Stats {\n  done: number\n  total: number\n}\n\nexport interface Props {\n  stats: O.Option<Stats>\n}\n\nexport const Title: React.FunctionComponent<Props> = ({ stats }: Props) => (\n  <>\n    Simple Todo&nbsp;\n    {pipe(\n      stats,\n      O.fold(\n        () => null,\n        ({ done, total }) => (\n          <span className=\"text-muted small\">\n            {done} / {total}\n          </span>\n        )\n      )\n    )}\n  </>\n)\n","import * as React from 'react'\n\nexport const EmptyTodos: React.FunctionComponent = () => (\n  <li className=\"list-group-item\">\n    <em>Task list is empty.</em>\n  </li>\n)\n","import * as React from 'react'\n\nexport const LoadingTodos: React.FunctionComponent = () => (\n  <li className=\"list-group-item\">\n    <em>Loading Tasks...</em>\n  </li>\n)\n","import * as React from 'react'\n\nexport interface Props {\n  value: string\n  onChange: (text: string) => void\n  onSubmit: () => void\n}\n\nexport const TodoForm: React.FunctionComponent<Props> = ({ value, onChange, onSubmit }: Props) => (\n  <form\n    onSubmit={event => {\n      onSubmit()\n      event.preventDefault()\n    }}>\n    <div className=\"input-group\">\n      <input type=\"text\" className=\"form-control\" name=\"task\" value={value} onChange={event => onChange(event.target.value)} />\n      <div className=\"input-group-append\">\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={value === ''}>\n          Add\n        </button>\n      </div>\n    </div>\n  </form>\n)\n","export const seed = (init: number): number => {\n  const result = init % 2147483647\n  return result <= 0 ? result + 2147483646 : result\n}\n\nexport const next = (seed: number) => (seed * 16807) % 2147483647\n","import { cmdr, platform, stater } from 'effe-ts'\nimport { Union, of } from 'ts-union'\nimport { Lens } from 'monocle-ts'\nimport { pipe } from 'fp-ts/lib/pipeable'\nimport * as api from '../api'\nimport { TodoForm } from '../components/TodoForm'\nimport * as random from '../random'\nimport uuid from 'uuid'\nimport * as React from 'react'\n\nexport interface Model {\n  seed: number\n  todo: api.Todo\n}\n\nexport const seedLens = Lens.fromProp<Model>()('seed')\nexport const todoLens = Lens.fromProp<Model>()('todo')\nexport const todoTextLens = todoLens.composeLens(Lens.fromProp<api.Todo>()('text'))\n\nexport const Action = Union({\n  Add: of(),\n  Api: of<api.Action>(),\n  UpdateText: of<{ text: string }>()\n})\nexport type Action = typeof Action.T\n\nexport const emptyTodo = (seed: number): api.Todo => ({\n  _id: uuid.v1({ msecs: seed }),\n  text: '',\n  isDone: false,\n  isFav: false\n})\n\nexport interface TodoFormEnv extends api.ApiEnv {\n  seed: number\n}\n\nexport const init = (env: TodoFormEnv): stater.StateR<TodoFormEnv, Model, Action> => {\n  const seed = random.seed(env.seed)\n  return [\n    {\n      seed,\n      todo: emptyTodo(seed)\n    },\n    cmdr.none\n  ]\n}\n\nexport const update = (action: Action, model: Model): stater.StateR<TodoFormEnv, Model, Action> =>\n  Action.match(action, {\n    Add: () => [\n      pipe(\n        model,\n        seedLens.modify(random.next),\n        todoLens.set(emptyTodo(model.seed))\n      ),\n      pipe(\n        api.add(model.todo),\n        cmdr.map(Action.Api)\n      )\n    ],\n    UpdateText: ({ text }) => [\n      pipe(\n        model,\n        todoTextLens.set(text)\n      ),\n      cmdr.none\n    ],\n    default: () => [model, cmdr.none]\n  })\n\nexport const view = (model: Model) => (dispatch: platform.Dispatch<Action>) => (\n  <TodoForm\n    value={model.todo.text}\n    onChange={text => dispatch(Action.UpdateText({ text }))}\n    onSubmit={() => dispatch(Action.Add())}\n  />\n)\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faCheckSquare, faStar, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { faSquare, faStar as faStarEmpty } from '@fortawesome/free-regular-svg-icons'\nimport * as React from 'react'\n\nexport interface Props {\n  isFav: boolean\n  isDone: boolean\n  text: string\n\n  onToggleFav: () => void\n  onToggleDone: () => void\n  onEdit: () => void\n  onRemove: () => void\n}\n\nexport const Todo: React.FunctionComponent<Props> = ({ isFav, isDone, text, onEdit, onToggleFav, onToggleDone, onRemove }) => (\n  <li className=\"task-container list-group-item d-flex justify-content-between align-items-center\">\n    <div>\n      <a href=\"#\" className=\"btn-left\" onClick={onToggleFav}>\n        <FontAwesomeIcon icon={isFav ? faStar : faStarEmpty} />\n      </a>\n      <a href=\"#\" className=\"btn-left\" onClick={onToggleDone}>\n        <FontAwesomeIcon icon={isDone ? faCheckSquare : faSquare} />\n      </a>\n      {!isDone ? text : <del className=\"text-muted\">{text}</del>}\n    </div>\n    <div>\n      <a href=\"#\" className=\"btn-right\" onClick={onEdit}>\n        <FontAwesomeIcon icon={faEdit} />\n      </a>\n      <a href=\"#\" className=\"btn-right\" onClick={onRemove}>\n        <FontAwesomeIcon icon={faTimes} />\n      </a>\n    </div>\n  </li>\n)\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as React from 'react'\n\nexport interface Props {\n  text: string\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onCancel: () => void\n  onSave: () => void\n}\n\nexport const TodoEdit: React.FunctionComponent<Props> = ({ text, onChange, onSave, onCancel }) => (\n  <li className=\"task-container list-group-item\">\n    <form\n      onSubmit={event => {\n        onSave()\n        event.preventDefault()\n      }}>\n      <div className=\"input-group\">\n        <input className=\"form-control\" type=\"text\" value={text} onChange={onChange} />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-success\" type=\"submit\" disabled={text.length === 0}>\n            <FontAwesomeIcon icon={faSave} />\n          </button>\n          <button className=\"btn btn-danger\" type=\"button\" onClick={onCancel}>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </div>\n      </div>\n    </form>\n  </li>\n)\n","import { Union, of } from 'ts-union'\nimport { cmdr, platform, stater } from 'effe-ts'\nimport { not, identity } from 'fp-ts/lib/function'\nimport { pipe } from 'fp-ts/lib/pipeable'\nimport { Lens, Optional } from 'monocle-ts'\nimport * as O from 'fp-ts/lib/Option'\nimport { Todo } from '../components/Todo'\nimport * as api from '../api'\nimport { TodoEdit } from '../components/TodoEdit'\nimport * as React from 'react'\n\nexport interface Todo extends api.Document<api.Todo> {}\n\nexport const Model = Union({\n  Editing: of<Todo, string>(),\n  None: of<Todo>()\n})\nexport type Model = typeof Model.T\n\nexport const todoLens = new Lens<Model, Todo>(\n  model =>\n    Model.match(model, {\n      Editing: todo => todo,\n      None: todo => todo\n    }),\n  todo => model =>\n    Model.match(model, {\n      Editing: (_, text) => Model.Editing(todo, text),\n      None: () => Model.None(todo)\n    })\n)\nexport const isDoneLens = todoLens.composeLens(Lens.fromProp<Todo>()('isDone'))\nexport const isFavLens = todoLens.composeLens(Lens.fromProp<Todo>()('isFav'))\nexport const idLens = todoLens.composeLens(Lens.fromProp<Todo>()('_id'))\nexport const revLens = todoLens.composeLens(Lens.fromProp<Todo>()('_rev'))\nexport const textLens = todoLens.composeLens(Lens.fromProp<Todo>()('text'))\nexport const editingTextOptional = new Optional<Model, string>(\n  model =>\n    Model.match(model, {\n      Editing: (_, text) => O.some(text),\n      default: () => O.none\n    }),\n  text => model =>\n    Model.match(model, {\n      Editing: todo => Model.Editing(todo, text),\n      default: () => model\n    })\n)\n\nexport const Action = Union({\n  Api: of<api.Action>(),\n  Cancel: of(),\n  Edit: of(),\n  Save: of(),\n  ToggleDone: of(),\n  ToggleFav: of(),\n  Remove: of(),\n  UpdateText: of<string>()\n})\nexport type Action = typeof Action.T\n\nexport interface TodoEnv extends api.ApiEnv {}\n\nexport function init(todo: api.Document<api.Todo>): stater.StateR<TodoEnv, Model, Action> {\n  return stater.of(Model.None(todo))\n}\n\nexport function update(action: Action, model: Model): stater.StateR<TodoEnv, Model, Action> {\n  return Model.match(model, {\n    Editing: (todo, text) =>\n      Action.match(action, {\n        Cancel: () => stater.of(Model.None(todo)),\n        Save: () => [\n          Model.None({ ...todo, text }),\n          pipe(\n            api.update({ ...todo, text }),\n            cmdr.map(Action.Api)\n          )\n        ],\n        UpdateText: text => [\n          pipe(\n            model,\n            editingTextOptional.set(text)\n          ),\n          cmdr.none\n        ],\n        default: () => stater.of(model)\n      }),\n    None: todo =>\n      Action.match(action, {\n        Api: action =>\n          api.Action.match(action, {\n            Change: change =>\n              pipe(\n                change,\n                O.fromEither,\n                O.filter(change => change.doc._id === todo._id),\n                O.fold(\n                  () => stater.of(model),\n                  ({ doc }) =>\n                    stater.of(\n                      pipe(\n                        model,\n                        revLens.set(doc._rev)\n                      )\n                    )\n                )\n              ),\n            Update: (_, response) =>\n              stater.of(\n                pipe(\n                  response,\n                  O.fromEither,\n                  O.filter(response => response.body.id === todo._id),\n                  O.fold(\n                    () => model,\n                    response =>\n                      pipe(\n                        model,\n                        revLens.set(response.body.rev)\n                      )\n                  )\n                )\n              ),\n            default: () => stater.of(model)\n          }),\n        Edit: () => stater.of(Model.Editing(todo, todo.text)),\n        Remove: () => [\n          model,\n          pipe(\n            api.remove(todo),\n            cmdr.map(Action.Api)\n          )\n        ],\n        ToggleDone: () => {\n          const updated = pipe(\n            model,\n            isDoneLens.modify(not(identity))\n          )\n          return [\n            updated,\n            Model.match(updated, {\n              None: todo =>\n                pipe(\n                  api.update(todo),\n                  cmdr.map(Action.Api)\n                ),\n              default: () => cmdr.none\n            })\n          ]\n        },\n        ToggleFav: () => {\n          const updated = pipe(\n            model,\n            isFavLens.modify(not(identity))\n          )\n          return [\n            updated,\n            Model.match(updated, {\n              None: todo =>\n                pipe(\n                  api.update(todo),\n                  cmdr.map(Action.Api)\n                ),\n              default: () => cmdr.none\n            })\n          ]\n        },\n        default: () => stater.of(model)\n      })\n  })\n}\n\nexport const view = (model: Model) => (dispatch: platform.Dispatch<Action>) =>\n  Model.match(model, {\n    Editing: (todo, text) => (\n      <TodoEdit\n        key={todo._id}\n        text={text}\n        onCancel={() => dispatch(Action.Cancel())}\n        onChange={event => dispatch(Action.UpdateText(event.target.value))}\n        onSave={() => dispatch(Action.Save())}\n      />\n    ),\n    None: todo => (\n      <Todo\n        key={todo._id}\n        {...todo}\n        onEdit={() => dispatch(Action.Edit())}\n        onRemove={() => dispatch(Action.Remove())}\n        onToggleDone={() => dispatch(Action.ToggleDone())}\n        onToggleFav={() => dispatch(Action.ToggleFav())}\n      />\n    )\n  })\n","import { contramap, ordBoolean, ordString, getSemigroup } from 'fp-ts/lib/Ord'\nimport * as R from 'fp-ts/lib/Record'\nimport { pipe } from 'fp-ts/lib/pipeable'\nimport { atRecord } from 'monocle-ts/lib/At/Record'\nimport { Prism, Lens } from 'monocle-ts/lib'\nimport * as E from 'fp-ts/lib/Either'\nimport * as A from 'fp-ts/lib/Array'\nimport { cmdr, html, stater, platform, subr } from 'effe-ts'\nimport { Union, of } from 'ts-union'\nimport * as O from 'fp-ts/lib/Option'\nimport * as NEA from 'fp-ts/lib/NonEmptyArray'\nimport * as rx from 'rxjs/operators'\nimport { fold } from 'fp-ts/lib/Monoid'\nimport * as T from 'fp-ts/lib/Tuple'\nimport * as Rr from 'fp-ts/lib/Reader'\nimport { Observable } from 'rxjs'\nimport { Title } from './components/Title'\nimport { EmptyTodos } from './components/EmptyTodos'\nimport { LoadingTodos } from './components/LoadingTodos'\nimport * as TodoForm from './containers/TodoForm'\nimport * as api from './api'\nimport * as Todo from './containers/Todo'\nimport * as React from 'react'\n\n// Define how tasks should be ordered\nconst ordCaseInsensitiveString = contramap<string, string>(str => str.toLocaleLowerCase())(ordString)\nconst ordTodoText = contramap<string, Todo.Model>(Todo.textLens.get)(ordCaseInsensitiveString) // Order by text\nconst ordTodoIsDone = contramap<boolean, Todo.Model>(Todo.isDoneLens.get)(ordBoolean) // Order by isDone\nconst ordTodo = getSemigroup<Todo.Model>().concat(ordTodoIsDone, ordTodoText) // Combine both ordering strategies\nconst sortTodos = A.sort(contramap<Todo.Model, [string, Todo.Model]>(([_, todo]) => todo)(ordTodo))\n\nexport interface Todos extends Record<string, Todo.Model> {}\n\n// The single state tree used by the application\nexport interface Model {\n  current: TodoForm.Model\n  todos: O.Option<Todos>\n}\n\n// Lenses for the `Model`\nconst currentLens = Lens.fromProp<Model>()('current')\nconst todosLens = Lens.fromProp<Model>()('todos')\nconst todosOptional = todosLens.composePrism(Prism.some())\nconst todoByIdOptional = (id: string) => todosOptional.composeLens(atRecord<Todo.Model>().at(id)).composePrism(Prism.some())\nconst insertTodo = (id: string, model: Model) => (todoModel: Todo.Model): Model =>\n  pipe(\n    model,\n    todosOptional.modify(R.insertAt(id, todoModel))\n  )\n\n// All actions that can happen in our application\nexport const Action = Union({\n  Api: of<api.Action>(),\n  Todo: of<string, Todo.Action>(),\n  TodoForm: of<TodoForm.Action>()\n})\nexport type Action = typeof Action.T\n\nexport interface AppEnv extends api.ApiEnv, Todo.TodoEnv, TodoForm.TodoFormEnv {}\n\nconst monoidCmd = cmdr.getMonoid<AppEnv, Action>()\nconst applicativeState = stater.getApplicative<AppEnv, Action>()\n\n// Generate the initial state of our application and trigger a command if wanted\nexport function init(env: AppEnv): stater.StateR<AppEnv, Model, Action> {\n  return pipe(\n    TodoForm.init(env),\n    T.bimap(\n      todoCmd =>\n        fold(monoidCmd)([\n          pipe(\n            todoCmd,\n            cmdr.map(Action.TodoForm)\n          ),\n          pipe(\n            api.load,\n            cmdr.map(Action.Api)\n          )\n        ]),\n      current => ({\n        current,\n        todos: O.none\n      })\n    )\n  )\n}\n\nexport function update(action: Action, model: Model): stater.StateR<AppEnv, Model, Action> {\n  return Action.match(action, {\n    Api: action =>\n      api.Action.match(action, {\n        Add: (todo, response) =>\n          pipe(\n            response,\n            E.fold(\n              () => stater.of(model),\n              response =>\n                pipe(\n                  Todo.init({\n                    ...todo,\n                    _rev: response.body.rev\n                  }),\n                  T.bimap(cmdr.map(action => Action.Todo(todo._id, action)), insertTodo(todo._id, model))\n                )\n            )\n          ),\n        Change: E.fold(\n          () => stater.of(model),\n          ({ doc }) => {\n            if ('_deleted' in doc) {\n              return stater.of(\n                pipe(\n                  model,\n                  todosOptional.modify(R.deleteAt(doc._id))\n                )\n              )\n            } else {\n              return pipe(\n                Todo.init(doc),\n                T.bimap(cmdr.map(action => Action.Todo(doc._id, action)), insertTodo(doc._id, model))\n              )\n            }\n          }\n        ),\n        Load: E.fold(\n          // If the response is an error do nothing by returning the current model\n          () => stater.of(model),\n          // Else evaluate the http response\n          response =>\n            pipe(\n              response.body.rows.map(row => Todo.init(row.doc)),\n              A.reduce(stater.of<Todos>({}), (result, [todoModel, todoCmd]) => {\n                const id = pipe(\n                  todoModel,\n                  Todo.idLens.get\n                )\n                return applicativeState.ap(\n                  [\n                    R.insertAt(id, todoModel),\n                    pipe(\n                      todoCmd,\n                      cmdr.map(action => Action.Todo(id, action))\n                    )\n                  ],\n                  result\n                )\n              }),\n              T.map(todos =>\n                pipe(\n                  model,\n                  todosLens.set(O.some(todos))\n                )\n              )\n            )\n        ),\n        Remove: (todo, response) =>\n          stater.of(\n            pipe(\n              response,\n              E.fold(\n                () => model,\n                () =>\n                  pipe(\n                    model,\n                    todosOptional.modify(R.deleteAt(todo._id))\n                  )\n              )\n            )\n          ),\n        default: () => stater.of(model)\n      }),\n    Todo: (id, action) =>\n      pipe(\n        model,\n        todoByIdOptional(id).getOption,\n        O.fold(\n          () => stater.of(model),\n          todoModel =>\n            pipe(\n              Todo.update(action, todoModel),\n              T.bimap(cmdr.map(action => Action.Todo(id, action)), todoModel =>\n                pipe(\n                  model,\n                  todoByIdOptional(id).set(todoModel)\n                )\n              )\n            )\n        )\n      ),\n    TodoForm: action =>\n      pipe(\n        TodoForm.update(action, model.current),\n        T.bimap(cmdr.map(Action.TodoForm), formModel =>\n          pipe(\n            model,\n            currentLens.set(formModel)\n          )\n        )\n      ),\n    default: () => stater.of(model)\n  })\n}\n\nconst view = (model: Model) => (dispatch: platform.Dispatch<Action>) => {\n  // Convert todos record to non empty array and sort it\n  // The result is a Option<Option<NonEmptyArray<Todo>>> type\n  // The most outer Option signalize the loading state. The inner Option signalize if the array is empty or not\n  // and the internal array has at least one Todo element\n  const todos = pipe(\n    model.todos,\n    O.map(todos => NEA.fromArray(sortTodos(R.toArray(todos))))\n  )\n  const stats = pipe(\n    todos,\n    O.flatten,\n    O.map(todos => ({\n      done: todos.filter(([_, todo]) => Todo.isDoneLens.get(todo)).length,\n      total: todos.length\n    }))\n  )\n  const Form = () => TodoForm.view(model.current)(action => dispatch(Action.TodoForm(action)))\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h3 className=\"card-title\">\n          <Title stats={stats} />\n        </h3>\n      </div>\n      <div className=\"card-body\">\n        <Form />\n      </div>\n      <ul className=\"list-group list-group-flush\">\n        {pipe(\n          // Unpacking the todos Option<Option<NonEmptyArray<Todo>>> object\n          todos,\n          O.fold(\n            // If the most outer Option is none the app is loading the todos\n            () => <LoadingTodos />,\n            // Else we most outer Option is some and we need evaluate the inner Option.\n            // Note: `fold` returns a new function that accepts the Option<NonEmptyArray<Todo>> type so the `pipe` call would be redundant\n            O.fold(\n              // If the the inner Option is none the array is empty\n              () => <EmptyTodos />,\n              // Else the todos were loaded and the array is not empty\n              todos => <>{todos.map(([id, model]) => Todo.view(model)(action => dispatch(Action.Todo(id, action))))}</>\n            )\n          )\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport const subscriptions: subr.SubR<AppEnv, Model, Action> = pipe(\n  api.subscriptions,\n  Rr.map(Rr.local<Observable<Model>, Observable<boolean>>(rx.map(model => O.isSome(model.todos)))),\n  subr.map(Action.Api)\n)\n\nexport const app = html.programR(init, update, view, subscriptions)\n","import { html, http } from 'effe-ts'\nimport { app } from './App'\nimport * as ReactDOM from 'react-dom'\n\nhtml.run(\n  app,\n  dom => {\n    ReactDOM.render(dom, document.getElementById('app'))\n  },\n  {\n    http: http.fetch,\n    seed: Date.now() * Math.random()\n  }\n)\n"],"sourceRoot":""}